{"version":3,"sources":["components/Camera.js","utils/auth.js","components/Signup.js","components/MyNavbar.js","components/Login.js","utils/api.js","components/Scan.js","components/Facts.js","components/ColorCodes.js","components/ColorTheory.js","components/Slider.js","components/Profile.js","components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["imageUrl","AuthService","signup","username","password","service","post","login","logout","loggedin","get","axios","create","baseURL","process","withCredentials","this","Signup","state","email","handleChange","event","target","name","value","setState","handleFormSubmit","preventDefault","then","response","props","history","push","catch","className","onSubmit","src","type","placeholder","onChange","to","React","Component","withRouter","MyNavbar","useState","isOpen","setIsOpen","loggedInUser","Navbar","color","light","expand","NavbarBrand","href","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","onClick","setCurrentUser","localStorage","removeItem","NavbarToggler","Login","data","setItem","_id","class","labelCol","span","wrapperCol","Item","rules","required","message","Password","offset","htmlType","ColorsService","uploadData","url","imageurl","userid","put","videoConstraints","width","height","facingMode","WebcamCapture","webcamRef","useRef","imgSrc","setImgSrc","colorCode","setColorCode","colorName","setColorName","capture","useCallback","imageSrc","current","getScreenshot","console","log","colorsService","uploadFileCamera","result","secure_url","imageName","substring","lastIndexOf","getColor","addImagesToLibrary","user","audio","ref","screenshotFormat","Scan","file","fileUrlOnCloudinary","uploadingImage","gettingColorCode","FormData","append","uploadFile","fileUrl","setColorResult","handleFileChange","files","encType","getColorResult","Facts","alt","ColorCodes","ColorTheory","style","items","uploads","length","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","slides","map","item","CarouselItem","onExiting","onExited","CarouselCaption","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","Profile","JSON","parse","getItem","Homepage","App","stringify","exact","path","component","render","window","location","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dfd6dc90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport ColorsService from \"../utils/api\";\r\nconst WebcamComponent = () => <Webcam />;\r\n\r\n//getScreenshot();\r\nlet imageUrl;\r\n\r\nconst videoConstraints = {\r\n  width: 640,\r\n  height: 360,\r\n  facingMode: \"user\",\r\n};\r\n\r\nconst WebcamCapture = (props) => {\r\n  const webcamRef = React.useRef(null);\r\n  const [imgSrc, setImgSrc] = React.useState(null);\r\n  const [colorCode, setColorCode] = React.useState(null);\r\n  const [colorName, setColorName] = React.useState(null);\r\n\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot({\r\n      width: 640,\r\n      height: 360,\r\n    });\r\n    setImgSrc(imageSrc);\r\n  });\r\n\r\n  if (imgSrc) {\r\n    console.log(\"this is the image from the cam\", imgSrc);\r\n    //    let myImageSource = JSON.stringify(imgSrc);\r\n    const colorsService = new ColorsService();\r\n    colorsService\r\n      .uploadFileCamera(imgSrc)\r\n      .then((response) => {\r\n        setImgSrc(null);\r\n        console.log(\"this is the response from uploading the file\", response);\r\n        imageUrl = response.data.result.secure_url;\r\n        const imageName = response.data.result.secure_url.substring(\r\n          response.data.result.secure_url.lastIndexOf(\"/\") + 1\r\n        );\r\n        return colorsService.getColor(imageName);\r\n      })\r\n      .then((response) => {\r\n        setColorCode(response.data.imageUrl);\r\n        setColorName(response.data.colorName);\r\n        return colorsService.addImagesToLibrary(imageUrl, props.user._id)\r\n      })\r\n      .then(() => {\r\n        console.log('image was push to favorites')\r\n      })\r\n  }\r\n\r\n  /*\r\n  if (imgSrc) {\r\n    console.log(\"this is the image from the cam\", imgSrc);\r\n\r\n    const colorsService = new ColorsService();\r\n\r\n    colorsService.uploadFileCamera(imgSrc).then((response) => {\r\n      console.log(\"this is the response from uploading\", response.data);\r\n      colorsService\r\n        .addImagesToLibrary(response.data.result.url, props.user._id)\r\n        .then(() => {\r\n          const imageName = response.data.result.secure_url.substring(\r\n            response.data.result.secure_url.lastIndexOf(\"/\") + 1\r\n          );\r\n          colorsService.getColor(imageName).then((response) => {\r\n            setColorCode(response.data.imageUrl);\r\n            setColorName(response.data.colorName);\r\n          });\r\n        });\r\n    });\r\n  }\r\n  */\r\n  return (\r\n    <div>\r\n      <div className=\"webcam-div\">\r\n        <Webcam\r\n          audio={false}\r\n          height={360}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          width={640}\r\n          videoConstraints={videoConstraints}\r\n          className=\"video-camera\"\r\n        />\r\n        <button className=\"photo-btn\" onClick={capture}>\r\n          Capture photo\r\n        </button>\r\n      </div>\r\n      <div className=\"scan-retun-results-cloudinary cam-results-div\">\r\n        {imageUrl ? (\r\n          <div className=\"uploaded-img\">\r\n            <img src={imageUrl} />\r\n          </div>\r\n        ) : null}\r\n        <div>\r\n          {colorCode ? (\r\n            <div className=\"color-code-result\">\r\n              <div className=\"color-code-result-img\">\r\n                <img src={colorCode} />\r\n              </div>\r\n              <div className=\"color-code-result-name\">{colorName}</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebcamCapture;\r\n","import axios from 'axios';\r\n\r\nclass AuthService {\r\n    constructor() {\r\n        let service = axios.create({\r\n            baseURL: `${process.env.REACT_APP_PROJECTS_API}/api`,\r\n            withCredentials: true\r\n        });\r\n        this.service = service;\r\n    }\r\n    signup = (username, password) => {\r\n        return this.service.post('/signup', {username, password});\r\n    }\r\n\r\n    login = (username, password) => {\r\n        return this.service.post('/login', {username, password});\r\n    }\r\n\r\n    logout = () => {\r\n        return this.service.post('/logout');\r\n    }\r\n\r\n    loggedin = () => {\r\n        return this.service.get('/loggedin');\r\n    }\r\n}\r\n\r\nexport default AuthService;","import React from \"react\";\r\nimport AuthService from \"../utils/auth\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Signup extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const authService = new AuthService();\r\n    authService\r\n      .signup(this.state.username, this.state.password)\r\n      .then((response) => {\r\n        this.props.history.push(\"/profile\");\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"login-box\" onSubmit={this.handleFormSubmit}>\r\n          <img src=\"images/eye.png\" className=\"avatar\" />\r\n          {/* <label>Username:</label> */}\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n          />\r\n          {/* <label>Password:</label> */}\r\n          <input\r\n            className=\"input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          {/* <label>Email:</label> */}\r\n          <input\r\n            className=\"input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"login-btn\">Signup</button>\r\n          <p className=\"loginP\">\r\n          Already have an account?\r\n          <Link to={\"/login\"}> Login</Link>\r\n        </p>\r\n        </form>\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","import AuthService from \"../utils/auth\";\r\nimport React, { useState } from \"react\";\r\n/* import { Button } from \"reactstrap\"; */\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\n\r\nconst MyNavbar = (props) => {\r\n  const logoutUser = () => {\r\n    const authService = new AuthService();\r\n    authService.logout().then(() => {\r\n      props.setCurrentUser(null);\r\n      localStorage.removeItem(\"loggedInUser\");\r\n    });\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  if (props.loggedInUser) {\r\n    return (\r\n      <div>\r\n        <Navbar className=\"myNavbar\" color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Poly</NavbarBrand>\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/scan\" className=\"scan-navbar\">\r\n                  <strong>Scan</strong>\r\n                </NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Learn More\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar\" href=\"/colortheory\">\r\n                        Color theory\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar\" href=\"/colorcodes\">\r\n                        Color Blind Codes\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar\" href=\"/facts\">\r\n                        Facts about color blindness\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <NavItem>\r\n                <NavLink href=\"/profile\">Profile</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"/\" onClick={logoutUser}>\r\n                  Logout\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Navbar className=\"nav myNavbar\" color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">Poly</NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink className=\"myNavbar\" href=\"/scan\">\r\n                  Scan\r\n                </NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle className=\"myNavbar\" nav caret>\r\n                  Learn More\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar\" href=\"/colortheory\">\r\n                        Color theory\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar\" href=\"/colorcodes\">\r\n                        Color Blind Codes\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar\" href=\"/facts\">\r\n                        Facts about color blindness\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle className=\"myNavbar\" nav caret>\r\n                  Authentication\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar\" href=\"/login-google\">\r\n                        Login with Google\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar auth\" href=\"/signup\">\r\n                        Signup\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <NavItem>\r\n                      <NavLink className=\"myNavbar auth\" href=\"/login\">\r\n                        Login\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MyNavbar;\r\n","import React from \"react\";\r\nimport AuthService from \"../utils/auth\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const authService = new AuthService();\r\n    authService\r\n      .login(this.state.username, this.state.password)\r\n      .then((response) => {\r\n        this.props.setCurrentUser(response.data);\r\n        localStorage.setItem(\"loggedInUser\", response.data._id);\r\n        this.props.history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const layout = {\r\n      labelCol: { span: 8 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    const tailLayout = {\r\n      wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    return (\r\n      <div>\r\n        <div className=\"login-box\">\r\n          <img src=\"images/eye.png\" class=\"avatar\" />\r\n          <Form {...layout}>\r\n            <Form.Item>\r\n              <Input\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your username!\" },\r\n                ]}\r\n                type=\"text\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Input.Password\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Please input your password!\" },\r\n                ]}\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            {/*  <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n            <Checkbox className=\"checkbox\">Remember me</Checkbox>\r\n          </Form.Item> */}\r\n\r\n            <Form.Item {...tailLayout}>\r\n              <Button\r\n                className=\"login-btn\"\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n          <p className=\"loginParag\">\r\n            Don't have an account?\r\n            <Link className=\"signA\" to={\"/signup\"}>\r\n              {\" \"}\r\n              Signup\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import axios from \"axios\";\r\n\r\nclass ColorsService {\r\n  constructor() {\r\n    let service = axios.create({\r\n      baseURL: `${process.env.REACT_APP_PROJECTS_API}/api`,\r\n      withCredentials: true,\r\n    });\r\n    this.service = service;\r\n  }\r\n  uploadFile(uploadData) {\r\n    return this.service.post(\"/upload\", uploadData);\r\n  }\r\n\r\n  uploadFileCamera(url) {\r\n    return this.service.post(\"/uploadcamera\", { url });\r\n  }\r\n\r\n  getColor(imageUrl) {\r\n    return this.service.get(`/getcolor/${imageUrl}`);\r\n  }\r\n\r\n  addImagesToLibrary(imageurl, userid) {\r\n    return this.service.put(`/addimage`, { imageurl, userid });\r\n  }\r\n}\r\nexport default ColorsService;\r\n","//import { Slider } from \"antd\";\r\nimport React from \"react\";\r\nimport ColorsService from \"../utils/api\";\r\nimport AuthService from \"../utils/auth\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport WebcamCapture from \"./Camera\";\r\n\r\nclass Scan extends React.Component {\r\n  state = {\r\n    file: \"\",\r\n    fileUrlOnCloudinary: \"\",\r\n    colorCode: \"\",\r\n    colorName: \"\",\r\n    user: \"\",\r\n    uploadingImage: false,\r\n    gettingColorCode: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const authService = new AuthService();\r\n    authService.loggedin().then((response) => {\r\n      this.setState({ user: response.data });\r\n    });\r\n  }\r\n\r\n  setColorResult(colorCode, colorName) {\r\n    this.setState({\r\n      colorCode: colorCode,\r\n      colorName: colorName,\r\n    });\r\n  }\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const colorsService = new ColorsService();\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"file\", this.state.file);\r\n    this.setState({\r\n      uploadingImage: true,\r\n    });\r\n    colorsService.uploadFile(uploadData).then((response) => {\r\n      this.setState({\r\n        uploadingImage: false,\r\n        gettingColorCode: true,\r\n      });\r\n      colorsService\r\n        .addImagesToLibrary(response.data.fileUrl, this.state.user._id)\r\n        .then(() => {\r\n          this.setState({\r\n            fileUrlOnCloudinary: response.data.fileUrl,\r\n            gettingColorCode: false,\r\n          });\r\n        });\r\n      const imageName = response.data.fileUrl.substring(\r\n        response.data.fileUrl.lastIndexOf(\"/\") + 1\r\n      );\r\n\r\n      colorsService.getColor(imageName).then((response) => {\r\n        this.setColorResult(response.data.imageUrl, response.data.colorName);\r\n      });\r\n    });\r\n  };\r\n\r\n  handleFileChange = (event) => {\r\n    this.setState({ file: event.target.files[0] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"scan-return-div\">\r\n        <form onSubmit={this.handleFormSubmit} encType=\"multipart/form-data\">\r\n          <div className=\"form-group\">\r\n            <div className=\"img-select-btn\">\r\n              <label>Please Select an Image:</label>\r\n              <input\r\n                className=\"form-control-file\"\r\n                type=\"file\"\r\n                onChange={this.handleFileChange}\r\n              />\r\n            </div>\r\n            <button className=\"button-upload\">Upload</button>\r\n          </div>\r\n        </form>\r\n        <div className=\"scan-retun-results-cloudinary\">\r\n          {this.state.fileUrlOnCloudinary ? (\r\n            <div className=\"uploaded-img\">\r\n              <img src={this.state.fileUrlOnCloudinary} />\r\n            </div>\r\n          ) : this.state.uploadingImage ? (\r\n            <Loader type=\"Grid\" color=\"#00BFFF\" height={80} width={80} />\r\n          ) : null}\r\n          <div>\r\n            {this.state.colorCode ? (\r\n              <div className=\"color-code-result\">\r\n                <div className=\"color-code-result-img\">\r\n                  <img src={this.state.colorCode} />\r\n                </div>\r\n                <div className=\"color-code-result-name\">\r\n                  {this.state.colorName}\r\n                </div>\r\n              </div>\r\n            ) : this.state.gettingColorCode ? (\r\n              <Loader type=\"Grid\" color=\"#00BFFF\" height={80} width={80} />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <WebcamCapture\r\n            getColorResult={this.setColorResult}\r\n            user={this.state.user}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scan;\r\n","import React from \"react\";\r\n\r\nfunction Facts() {\r\n  return (\r\n    <div>\r\n    <div className=\"container-fluid\">\r\n    <div className=\"row facts-page\">\r\n\r\n    <div className=\"col-sm text-div \">\r\n\r\n      <div className=\"bigP\">\r\n      <h3> What is Color-Blindness </h3>\r\n      \r\n      <p>\r\n      *  Color-blindness is the inability to distinguish the differences between\r\n        certain colors.\r\n      </p>\r\n      <p>\r\n      *  This condition results from an absence of color-sensitive pigment in the\r\n        cone cells of the retina, the nerve layer at the back of the eye.</p>\r\n\r\n      <p>*  Most color vision problems are inherited and are present at birth.</p>\r\n      <p>\r\n        \r\n      *  Approximately 1 out of 12 males and 1 out of 20 women are color blind.\r\n      </p>\r\n       \r\n\r\n      <h3> What does a color-blind person see? </h3>\r\n      <p>\r\n      *  A person with color-blindness has trouble seeing red, green, blue, or\r\n        mixtures of these colors.\r\n      </p>\r\n      <p>\r\n       \r\n      * The most common type is red-green color-blindness, where red and green\r\n        are seen as the same color.\r\n      </p>\r\n      </div>\r\n      </div>\r\n      <div className=\"col-sm imgdiv\">\r\n      <h3>\r\n        Illustrations of the most common\r\n      </h3>\r\n      <h3>\r\n      forms of color-blindness: \r\n      </h3>\r\n\r\n      <img className=\"img-stripes\"\r\n       // src=\"images/colorblind.JPG\"\r\n       src=\"images\\eyeTest_know_color_blindness.jpg\"\r\n        alt=\"color blindness spectrum comparison\"\r\n      />\r\n      <div className=\"test\">\r\n      <a target=\"_blank\" href=\"https://www.color-blindness.com/ishihara_cvd_test/ishihara_cvd_test.html?iframe=true&width=500&height=428\">\r\n        Take the test!\r\n      </a>\r\n      </div>\r\n      </div>\r\n      <div className=\"col-sm useful-link\">\r\n      <h3> Statistics </h3>\r\n      <ul className=\"facts-list\">\r\n        <li> *  0.38% of women are deuteranomalous (around 95% of all color deficient women).</li>\r\n        <li>*  0.005% of the population are totally colour blind.</li>\r\n        <li> * 0.003% of the population have tritanopia.</li>\r\n        <li> * Protanomaly occurs in about 1% of males.</li>\r\n        <li> * Deuteranomaly occurs in about 5% of males. It's the most common color deficiency.</li>\r\n        <li> * Protanopia occurs in about 1% of males.</li>\r\n        <li> * Deuteranopia occurs in about 1% of males.</li>\r\n      </ul>\r\n      <h5>Useful link: </h5>\r\n      <p>\r\n          If you want to see more about how diferent color blind </p> \r\n          <p>\r\n          see the world, click this here:   \r\n      </p>\r\n      <a target=\"_blank\" href=\"https://www.iamcal.com/misc/colors/\">\r\n        \r\n        Click me\r\n      </a>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\nexport default Facts;\r\n","/* import { render } from '@testing-library/react'; */\r\nimport React from \"react\";\r\n\r\nclass ColorCodes extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <h2>Color codes</h2>\r\n        </div>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm bigP\">\r\n              <p>\r\n                Coloradd is a sign code for aiding color blind people to\r\n                recognise colors, developed by Portuguese graphic designer and\r\n                professor at the University of Minho, Miguel Neiva. It consists\r\n                of geometric shapes representing colors and color combinations.{\" \"}\r\n              </p>\r\n              <p>\r\n                The code is based on five base signs: two triangles (one angled\r\n                upwards and the other angled downwards), one diagonal line, one\r\n                solid square box and one empty square box representing black,\r\n                white and the primary colors: red (magenta), blue (cyan), and\r\n                yellow. Colors derived from other colors have the symbols of the\r\n                combined colors, creating derivative colors (orange, green,\r\n                purple and brown) and dark or white tones. Metalized colors like\r\n                silver or gold are shown with a left parenthesis on the symbols.\r\n              </p>\r\n              <div className=\"img1\">\r\n                <img\r\n                  src=\"images/basic-color-codes.jpg\"\r\n                  alt=\"colorAdd baisic color symbols\"\r\n                />\r\n              </div>\r\n              <div className=\"img2\">\r\n                <img\r\n                  src=\"images/CODE_cinzas.gif\"\r\n                  alt=\"colorAdd grey tons symbols\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <div className=\"img3\">\r\n                <img\r\n                  src=\"images/Color-ADD_1.jpg\"\r\n                  alt=\"colorAdd translation graph\"\r\n                />\r\n              </div>\r\n              <div className=\"img4\">\r\n                <img src=\"images/image.jpg\" alt=\"color combinations\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <div className=\"img5\">\r\n                <img\r\n                  src=\"images/CODE-CLARO-ESCURO.gif\"\r\n                  alt=\"tonal color symbols\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorCodes;\r\n","import React from \"react\";\r\n\r\nfunction ColorTheory() {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div>\r\n        <h2 className=\"color-theory-title\"> Color Theory </h2>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm color-theory-img\">\r\n            <img\r\n              src=\"images/Color_diagram_Charles_Hayter.jpg\"\r\n              alt=\"Charles Hayter's diagram\"\r\n            ></img>\r\n            <p className=\"color-theory-p\">Color diagram Charles Hayter</p>\r\n          </div>\r\n          <div className=\"col-sm bigP\">\r\n            <p>\r\n              {\" \"}\r\n              In the visual arts, color theory is a body of practical guidance\r\n              to color mixing and the visual effects of a specific color\r\n              combination.{\" \"}\r\n            </p>\r\n            <p>\r\n              There are also definitions (or categories) of colors based on the\r\n              color wheel: primary color, secondary color, and tertiary color.\r\n              Although color theory principles first appeared in the writings of\r\n              Leone Battista Alberti (c. 1435) and the notebooks of Leonardo da\r\n              Vinci (c. 1490), a tradition of \"colory theory\" began in the 18th\r\n              century, initially within a partisan controversy over Isaac\r\n              Newton's theory of color (Opticks, 1704) and the nature of primary\r\n              colors. From there it developed as an independent artistic\r\n              tradition with only superficial reference to colorimetry and\r\n              vision science.{\" \"}\r\n            </p>\r\n\r\n            <p>\r\n              The purpose of color theory range from renaissance fine art to\r\n              modern commercial advertising.{\" \"}\r\n            </p>\r\n            <p>Colours affect our mood and perception.</p>\r\n            <p>Color theory is not new but also seen in old traditions. </p>\r\n\r\n            <p> Color can be classified: </p>\r\n            <ul>\r\n              <li>Warm and Cold</li>\r\n              <li>Receding and Advancing</li>\r\n              <li>Positive and negative</li>\r\n              <li>Subtractive and additive</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n          <img src=\"images/colorwheel-old.jpg\" />\r\n           {/*  <img src=\"images/colorwheel.jpg\" alt=\"color wheel\" /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorTheory;\r\n","import { Divider } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n} from \"reactstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AuthService from \"../utils/auth\";\r\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\r\n\r\nlet items = [\r\n  \"images/painting.jpg\",\r\n  /* \"images/colorblindness-exemple2.png\" */\r\n  \"images/dogColorBlind.jpg\",\r\n  /* \"images/Color-vision-deficiency.jpg\" */\r\n  \"images/trees1.jpg\",\r\n];\r\n\r\nconst Slider = (props) => {\r\n  // let uploads;\r\n  if (props.uploads && props.uploads.length >= 3) {\r\n    items = props.uploads;\r\n    // const getUploads = () => {\r\n    //   const authservice = new AuthService();\r\n    //   authservice.loggedin().then((response) => {\r\n    //     uploads = response.data.uploads;\r\n    //   });\r\n    // };\r\n    // if (uploads.length == 0) {\r\n    //   getUploads();\r\n    // }\r\n    // console.log(uploads);\r\n  }\r\n  console.log(items);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item}\r\n      >\r\n        <img src={item} />\r\n        <CarouselCaption />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n      <CarouselIndicators\r\n        items={items}\r\n        activeIndex={activeIndex}\r\n        onClickHandler={goToIndex}\r\n      />\r\n      {slides}\r\n      <CarouselControl\r\n        direction=\"prev\"\r\n        directionText=\"Previous\"\r\n        onClickHandler={previous}\r\n      />\r\n      <CarouselControl\r\n        direction=\"next\"\r\n        directionText=\"Next\"\r\n        onClickHandler={next}\r\n      />\r\n    </Carousel>\r\n  );\r\n};\r\nexport default withRouter(Slider);\r\n","import React from \"react\";\r\nimport Scan from \"./Scan\";\r\nimport Slider from \"./Slider\";\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    loggedInUser: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    this.setState({\r\n      loggedInUser: user,\r\n    });\r\n  }\r\n  render() {\r\n    return this.state.loggedInUser ? (\r\n      <div>\r\n        <div className=\"welcome\">\r\n          <h3 >\r\n            Welcome, {this.state.loggedInUser.username}\r\n          </h3>\r\n        </div>\r\n        <div className=\"welcome\">\r\n          <h4> See your library</h4>\r\n        </div>\r\n        <div>\r\n          <Slider uploads={this.state.loggedInUser.uploads} />\r\n        </div>\r\n       {/*  <div>\r\n          <Scan />\r\n        </div> */}\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n/* import ColorsService from \"../utils/api\"; */\r\nimport Slider from \"./Slider\";\r\n\r\nclass Homepage extends React.Component {\r\n  /*  state = {\r\n    file: \"\",\r\n    fileUrlOnCloudinary: \"\",\r\n  }; */\r\n\r\n  /*   handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const colorsService = new ColorsService();\r\n    const uploadData = new FormData();\r\n    uploadData.append(\"file\", this.state.file);\r\n    colorsService.uploadFile(uploadData).then((response) => {\r\n      console.log(\"Image uploaded\");\r\n      this.setState({\r\n        fileUrlOnCloudinary: response.data.fileUrl,\r\n      });\r\n    });\r\n  };\r\n\r\n  handleFileChange = (event) => {\r\n    this.setState({ file: event.target.files[0] });\r\n  }; */\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"slider\">\r\n          <Slider />\r\n        </div>\r\n        <div className=\"mainH2\">\r\n          <h2>What is POLY?</h2>\r\n          <div className=\"poly-text\">\r\n            <h5>\r\n              Poly is an app designed to help those with color blindness and /\r\n              or reduced vision. Poly allows you to upload images or use the\r\n              camera in order to translate the dominant color to the symbol\r\n              created by ColorAdd that corresponds to it!\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;\r\n","import \"./App.css\";\r\nimport Signup from \"./components/Signup\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport MyNavbar from \"./components/MyNavbar\";\r\nimport Login from \"./components/Login\";\r\nimport React from \"react\";\r\nimport AuthService from \"./utils/auth\";\r\nimport Scan from \"./components/Scan\";\r\n/* import { Button } from \"reactstrap\"; */\r\nimport Facts from \"./components/Facts\";\r\nimport ColorCodes from \"./components/ColorCodes\";\r\nimport ColorTheory from \"./components/ColorTheory\";\r\nimport Profile from \"./components/Profile\";\r\n/* import Slider from \"./components/Slider\"; */\r\nimport Homepage from \"./components/Homepage\";\r\n\r\n/* import \"../public/stylesheet/ColorTheo.css\";\r\nimport \"../public/stylesheet/NavLogSign.css\";\r\nimport \"../public/stylesheet/Login.css\";\r\nimport \"../public/stylesheet/Facts.css\"; \r\nimport \"../public/stylesheet/ColorCodes.css\";\r\nimport \"../public/stylesheet/Scan.css\"; */\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    loggedInUser: null,\r\n  };\r\n\r\n  setCurrentUser = (user) => {\r\n    this.setState({\r\n      loggedInUser: user,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.loggedInUser === null) {\r\n      const authService = new AuthService();\r\n      authService.loggedin().then((response) => {\r\n        if (response.data._id) {\r\n          this.setCurrentUser(response.data);\r\n          localStorage.setItem(\"loggedInUser\", JSON.stringify(response.data));\r\n        } else {\r\n          localStorage.removeItem(\"loggedInUser\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MyNavbar\r\n          loggedInUser={this.state.loggedInUser}\r\n          setCurrentUser={this.setCurrentUser}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Homepage} />\r\n          <Route\r\n            exact\r\n            path=\"/scan\"\r\n            render={() => {\r\n              return <Scan user={this.state.loggedInUser} />;\r\n            }}\r\n          />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <Route\r\n            exact\r\n            path=\"/login\"\r\n            render={() => (\r\n              <Login\r\n                setCurrentUser={this.setCurrentUser}\r\n                loggedInUser={this.state.loggedInUser}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/profile\"\r\n            render={() => {\r\n              if (localStorage.getItem(\"loggedInUser\")) {\r\n                return <Profile />;\r\n              } else {\r\n                return <Redirect to=\"/login\" />;\r\n              }\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/login-google\"\r\n            render={() => {\r\n              window.location.href = `${process.env.REACT_APP_PROJECTS_API}/api/auth/google`;\r\n            }}\r\n          />\r\n          <Route exact path=\"/colortheory\" component={ColorTheory} />\r\n          <Route exact path=\"/facts\" component={Facts} />\r\n          <Route exact path=\"/colorcodes\" component={ColorCodes} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  //  </React.StrictMode>\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}